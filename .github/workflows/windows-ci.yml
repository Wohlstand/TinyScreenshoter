name: Windows CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: "${{ matrix.config.name }} | ${{ matrix.config.build_type }}"
    runs-on: ${{ matrix.config.os }}
    container: ${{ matrix.config.container }}
    strategy:
      fail-fast: false
      matrix:
        config:
        - {
            name: "Windows - 32-bit",
            os: windows-latest,
            extra_path: "/c/WohlMinGW32/bin",
            executable_name_suffix: "",
            package_filename_suffix: "win32",
            upload_directory: "www/win32/",
            mingw_download: "https://wohlsoft.ru/docs/Software/QtBuilds/MinGW-6-3-x86-dw2.zip", mingw_install_dir: "C:/WohlMinGW32/",
            lftp_download: "https://wohlsoft.ru/docs/Software/lftp-4.4.15.win64-openssl-1.0.1g.7z", lftp_install_dir: "C:/WohlMinGW32/",
            qt4_download: "https://wohlsoft.ru/docs/Software/QtBuilds/qt-4.4.3-mingw-6.3-win32-static-mini-release.7z", qt4_install_dir: "C:/Qt/",
          }

    steps:
    - name: Check for the upload support
      id: upload-check
      shell: bash
      run: |
        if [[ "${{ secrets.builds_login }}" != '' && \
              "${{ secrets.builds_password }}" != '' && \
              "${{ secrets.builds_host }}" != '' ]]; then
          echo "available=true" >> $GITHUB_OUTPUT;
        else
          echo "available=false" >> $GITHUB_OUTPUT;
        fi

    - uses: actions/checkout@v3

    - uses: Wohlstand/branch-name@v1.0.1-wohl

    - name: Download MinGW
      if: matrix.config.mingw_download
      shell: bash
      run: C:\\msys64\\usr\\bin\\wget.exe -d -nv -t 5 -O mingw.7z "${{ matrix.config.mingw_download }}"

    - name: Extract MinGW
      if: matrix.config.mingw_install_dir
      shell: bash
      run: |
        7z x mingw.7z -o"${{ matrix.config.mingw_install_dir }}"

    - name: Download Qt4
      if: matrix.config.qt4_download
      shell: bash
      run: C:\\msys64\\usr\\bin\\wget.exe -d -nv -t 5 -O qt4.7z "${{ matrix.config.qt4_download }}"

    - name: Extract Qt4
      if: matrix.config.qt4_install_dir
      shell: bash
      run: |
        7z x qt4.7z -o"${{ matrix.config.qt4_install_dir }}"

    - name: Download LFTP
      if: matrix.config.lftp_download
      shell: bash
      run: C:\\msys64\\usr\\bin\\wget.exe -d -nv -t 5 -O lftp.7z "${{ matrix.config.lftp_download }}"

    - name: Extract LFTP
      if: matrix.config.lftp_install_dir
      shell: bash
      run: |
        7z x lftp.7z bin etc -o"${{ matrix.config.lftp_install_dir }}"

    - name: Configure (Qt)
      shell: bash
      run: |
        if [[ ! -z "${{ matrix.config.extra_path }}" ]]; then
          export PATH=${{ matrix.config.extra_path }}:${PATH}
          echo "PATH environment: ${PATH}"
        fi
        cd qt
        /c/Qt/4.4.3/bin/qmake CONFIG+=Release CONFIG-=Debug
        cd ..

    - name: Build (Qt)
      shell: bash
      run: |
        if [[ ! -z "${{ matrix.config.extra_path }}" ]]; then
          export PATH=${{ matrix.config.extra_path }}:${PATH}
        fi
        cd qt
        mingw32-make -j 4
        cd ..

    - name: Configure (WinAPI)
      shell: bash
      run: |
        if [[ ! -z "${{ matrix.config.extra_path }}" ]]; then
          export PATH=${{ matrix.config.extra_path }}:${PATH}
          echo "PATH environment: ${PATH}"
        fi
        cd winapi
        cmake -G "MinGW Makefiles" -B build -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE=`pwd`/cmake/ci_windows_mingw_toolchain_x32.cmake .

    - name: Build (WinAPI)
      shell: bash
      run: |
        if [[ ! -z "${{ matrix.config.extra_path }}" ]]; then
          export PATH=${{ matrix.config.extra_path }}:${PATH}
          echo "PATH environment: ${PATH}"
        fi
        cd winapi/build
        mingw32-make -j 4

    - name: Create Package
      if: success()
      shell: bash
      run: |
        cp README.md bin/ReadMe.txt
        unix2dos bin/ReadMe.txt
        7z a -tzip bin/TinyScreenshoter-win32-qt.zip ./bin/TinyScreenshoter.exe ./bin/ReadMe.txt
        7z a -tzip bin/TinyScreenshoter-win32-winapi.zip ./winapi/build/TinyScreenshoterWin.exe ./bin/ReadMe.txt

    - name: Upload artifact
      if: success()
      uses: actions/upload-artifact@v4
      continue-on-error: true
      with:
        path: bin/*.exe
        name: ${{ matrix.config.name }} ${{ matrix.config.build_type }}

    - name: Deploy to builds.wohlsoft.ru
      if: success() && github.event_name != 'pull_request' && steps.upload-check.outputs.available == 'true'
      continue-on-error: true
      shell: bash
      run: |
        if [[ ! -z "${{ matrix.config.extra_path }}" ]]; then
          export PATH=${{ matrix.config.extra_path }}:${PATH}
        fi
        UPLOAD_LIST="set ssl:verify-certificate no;"
        for q in ./bin/*.zip; do
            UPLOAD_LIST="${UPLOAD_LIST} put -O ${{ matrix.config.upload_directory }} $q;"
        done
        lftp -e "${UPLOAD_LIST} exit" -u ${{ secrets.builds_login }},${{ secrets.builds_password }} ${{ secrets.builds_host }}

    - name: List Build Directory
      if: always()
      shell: bash
      run: |
        git status
        ls -lR bin
